name: CI Build
on:
  push:
    branches:
      - '*'
      - '!master'

jobs:

#  windows_build_parallel:
#    runs-on: windows-latest
#    steps:
#      - uses: actions/checkout@v4
#        with:
#          ref: ${{ github.ref }}
#      - name: Set env
#        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
#        shell: bash
#      - name: Release version
#        run: |
#          echo $RELEASE_VERSION
#          echo ${{ env.RELEASE_VERSION }}
#        shell: bash
#      - name: Set up AdoptOpenJDK 23
#        uses: actions/setup-java@v4
#        with:
#          distribution: 'temurin'
#          java-version: '23'
#          architecture: x64
#      - name: Install submodules
#        run: |
#          git submodule update --init
#        shell: bash
#      - id: get-id
#        run: |
#          idBeta=0.0.${{github.run_number}}
#          echo "idBeta=$idBeta" >> $GITHUB_OUTPUT
#          id=$(mvn org.apache.maven.plugins:maven-help-plugin:3.1.0:evaluate -Dexpression=project.version -q -DforceStdout)
#          echo "id=$id" >> $GITHUB_OUTPUT
#        shell: bash
#      - name: Publish package
#        run: |
#          mvn -B package
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        shell: bash
#      - name: Java 14 Package API, create EXE binary
#        run: |
#          rm -rf target/fireflyluciferin-${{steps.get-id.outputs.id}}.jar;
#          cd build_tools/wixtools;
#          echo ${{github.run_number}}
#          jpackage -i ../../target --type exe --main-class org.dpsoftware.JavaFXStarter --main-jar FireflyLuciferin-jar-with-dependencies.jar --icon ../../data/img/java_fast_screen_capture_logo.ico --win-menu --win-menu-group Luciferin --copyright "Davide Perini" --name "Firefly Luciferin"  --vendor DPsoftware --win-dir-chooser --win-shortcut --win-per-user-install --win-upgrade-uuid 33c82dc4-e0e0-11ea-87d0-0242ac130003 --app-version "0.0.${{github.run_number}}" --win-shortcut --win-shortcut-prompt --java-options "-XX:+UseZGC -XX:+UseStringDeduplication -Xms64m -Xmx1024m --add-modules=jdk.incubator.vector"
#        shell: bash
#      - name: Adding asset to the release
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        run: |
#          cd build_tools/wixtools;
#          mv Firef*.exe FireflyLuciferinSetup.exe;
#          mv FireflyLuciferinSetup.exe ../../;
#          cd ../../;
#        shell: bash
#      - name: Creating artifact from BIN file
#        uses: actions/upload-artifact@v4
#        with:
#          name: FireflyLuciferinSetup_${{steps.get-id.outputs.id}}_ALPHA.exe
#          path: FireflyLuciferinSetup.exe

  linux_build_parallel:
    runs-on: ubuntu-latest
    outputs:
      output1: ${{ steps.deb.outputs.sha }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}
          submodules: recursive
      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - name: Release version
        run: |
          echo $RELEASE_VERSION
          echo ${{ env.RELEASE_VERSION }}
      - name: Set up AdoptOpenJDK 23
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '23'
          architecture: x64
      - id: get-id
        run: |
          id=$(grep -oPm1 "(?<=<version>)[^<]+" "pom.xml")
          echo "id=$id" >> $GITHUB_OUTPUT
      - name: Publish package
        run: |
          mvn -B package
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Java 14 Package API, create Linux binary
        run: |
          ls -la target
          rm -rf target/fireflyluciferin-${{steps.get-id.outputs.id}}.jar;
          jpackage -i target --main-class org.dpsoftware.JavaFXStarter --main-jar FireflyLuciferin-jar-with-dependencies.jar --icon data/img/luciferin_logo.png --linux-shortcut --copyright "Davide Perini" --name FireflyLuciferin  --vendor DPsoftware --app-version "${{steps.get-id.outputs.id}}" --java-options "-XX:+UseZGC -XX:+UseStringDeduplication -Xms64m -Xmx1024m --add-modules=jdk.incubator.vector --enable-native-access=org.dpsoftware --enable-native-access=ALL-UNNAMED"
      - id: deb
        name: Adding Linux asset to the release (Debian flavour)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          mv firefly* FireflyLuciferinLinux.deb;
          pwd;
          ls -la;
          cd build_tools/flatpak;
          ls;
          cd org.dpsoftware.FireflyLuciferin;
          ls -la;
          sha256sum ../../../FireflyLuciferinLinux.deb;
          sha256_value=$(sha256sum ../../../FireflyLuciferinLinux.deb | awk '{ print $1 }');
          echo "sha=$sha256_value" >> "$GITHUB_OUTPUT"

#          jq --arg sha256 "$sha256_value" '( .modules[] | select(type == "object" and .name == "fireflyluciferin") | .sources[0] ) |= (.sha256 = $sha256 | .url = "pippo${{steps.get-id.outputs.id}}.org")' org.dpsoftware.FireflyLuciferin.json > temp.json && mv temp.json org.dpsoftware.FireflyLuciferin.json;
#          cat org.dpsoftware.FireflyLuciferin.json;
#      - name: Setup action-debug-vscode session
#        uses: fawazahmed0/action-debug-vscode@main
      - name: Creating artifact from BIN file
        uses: actions/upload-artifact@v4
        with:
          name: FireflyLuciferinLinux_${{steps.get-id.outputs.id}}_ALPHA.deb
          path: FireflyLuciferinLinux.deb
      - name: Adding Linux asset to the release (RedHat flavour)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          sudo apt install alien -y;
          sudo alien -r FireflyLuciferinLinux.deb
          mv *.rpm FireflyLuciferinLinux.rpm;
      - name: Creating artifact from BIN file
        uses: actions/upload-artifact@v4
        with:
          name: FireflyLuciferinLinux_${{steps.get-id.outputs.id}}_ALPHA.rpm
          path: FireflyLuciferinLinux.rpm

  usa_sha256:
    runs-on: ubuntu-latest
    needs: linux_build_parallel
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}
          submodules: recursive
      - env:
          OUTPUT1: ${{needs.linux_build_parallel.outputs.output1}}
        run: |
          echo "$OUTPUT1"
          cd build_tools/flatpak;
          cd org.dpsoftware.FireflyLuciferin;
          sha256_value=$OUTPUT1
          sha256_value=d4f2f23c1d2d04ba33781372f48ec3edb5e6a82dd893c8e4bea9759cb6807747
          echo "Il valore SHA-256 Ã¨ $OUTPUT1"
          jq --arg sha256 "$sha256_value" '( .modules[] | select(type == "object" and .name == "fireflyluciferin") | .sources[0] ) |= (.sha256 = $sha256 | .url = "https://dpsoftware.org/2.17.10/FireflyLuciferinLinux.deb")' org.dpsoftware.FireflyLuciferin.json > temp.json && mv temp.json org.dpsoftware.FireflyLuciferin.json;
          cat org.dpsoftware.FireflyLuciferin.json;
